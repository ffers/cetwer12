
#  id |        name        | description
# ----+--------------------+-------------
#   1 | –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏        |
#   2 | –ü—ñ–¥—Ç–≤–µ—Ä–∂–µ–Ω–æ        |
#   3 | –û–ø–ª–∞—á–µ–Ω–æ           |
#   4 | –ù–µ—Å–ø–ª–∞—á–µ–Ω–æ         |
#   5 | –°–∫–∞—Å–æ–≤–∞–Ω–æ          |
#   6 | –ü—Ä–µ–¥–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è     |
#   7 | –ü–∏—Ç–∞–Ω–Ω—è            |
#   8 | –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ        |
#   9 | –û—Ç—Ä–∏–º–∞–Ω–æ           |
#  10 | –ù–æ–≤–µ               |
#  11 | –û—á—ñ–∫—É—î –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—è |
#  12 | –í–∏–∫–æ–Ω–∞–Ω–æ           |
#  13 | –¢–µ—Å—Ç
#  14 | –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è




class Handler:
    list_order = []

    def __init__(self, next_handler=None):
        self.next_handler = next_handler
        

    def handle(self, repo):
        context = self.process(repo)
        if self.next_handler:
            self.list_order.extend(context)
            print(f"handle: {self.list_order}")
            return self.next_handler.handle(repo)
        result = Handler.list_order
        self.reset_list_order()
        return result
    
    @classmethod
    def reset_list_order(cls):
        cls.list_order = []  # üîÑ –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç

    def process(self, repo):
        raise NotImplementedError("Override process() in subclass")

class New(Handler):
    def process(self, repo):
        resp = repo.load_status_id(10)
        print(resp)
        return resp
        
class Paid(Handler):
    def process(self, repo):
        resp = repo.load_status_id(3)
        print(resp)
        return resp

class Unpaid(Handler):
    def process(self, repo):
        resp = repo.load_status_id(4)
        print(resp)
        return resp

class StatusNewWithPaidPipline:
    def __init__(self):
        self.pipeline = New(
                Paid(
                    Unpaid()
                )
        )

    def process(self, repo):
        result = self.pipeline.handle(repo)
        print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:", "‚úÖ –£—Å–ø—ñ—à–Ω–æ" if result else "‚ùå –ü–æ–º–∏–ª–∫–∞")
        return result